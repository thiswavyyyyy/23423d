from aiogram import types
from aiogram.dispatcher.filters import Text
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import SUPPORT_CHAT_ID
from db_logic.base import SupportTickets
from utils.storage import JSONStorage
from loader import dp
from states import SupportState

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞
@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
async def new_chat_member(message: types.Message):
    await message.reply(f"ID —á–∞—Ç–∞: {message.chat.id}\n–ë–æ—Ç–∞ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∞ –≤ —á–∞—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
@dp.message_handler(chat_id=SUPPORT_CHAT_ID, content_types=types.ContentType.ANY)
async def support_admin_reply(message: types.Message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ñ–æ—Ä—É–º–∞
    if message.content_type in [
        types.ContentType.FORUM_TOPIC_CREATED,
        types.ContentType.FORUM_TOPIC_EDITED,
        types.ContentType.FORUM_TOPIC_CLOSED,
    ]:
        return
    
    message_thread_id = message.message_thread_id
    ticket = SupportTickets().get_ticket_by_message_thread_id(message_thread_id)
    
    if not ticket:
        await message.reply("–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_state = dp.current_state(chat=ticket.tg_id, user=ticket.tg_id)
    await user_state.set_state(SupportState.in_support)
    await user_state.update_data(message_thread_id=message_thread_id)
    
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        if message.content_type == types.ContentType.PHOTO:
            await dp.bot.send_photo(
                chat_id=ticket.tg_id,
                photo=message.photo[-1].file_id,
                caption=f"üåÑ –§–æ—Ç–æ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {message.caption}" if message.caption else "üåÑ –§–æ—Ç–æ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
            )
        elif message.content_type == types.ContentType.VIDEO:
            await dp.bot.send_video(
                chat_id=ticket.tg_id,
                video=message.video.file_id,
                caption=f"üé• –í–∏–¥–µ–æ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {message.caption}" if message.caption else "üé• –í–∏–¥–µ–æ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
            )
        else:
            await dp.bot.send_message(
                chat_id=ticket.tg_id,
                text=f"üëÅÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {message.text}"
            )
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ç–∏–∫–µ—Ç–æ–º
@dp.callback_query_handler(Text(startswith="ticket_action:"), state="*")
async def handle_ticket_actions(call: types.CallbackQuery):
    action = call.data.split(":")[1]
    message_thread_id = call.message.message_thread_id
    
    ticket = SupportTickets().get_ticket_by_message_thread_id(message_thread_id)
    if not ticket:
        await call.answer("–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if action == "block":
        JSONStorage.block_user(ticket.tg_id)
        block_text = " + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
    else:
        block_text = ""
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await dp.bot.send_message(
        chat_id=ticket.tg_id,
        text=f"üîí –í–∞—à —Ç–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç{' (–≤—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã)' if action == 'block' else ''}"
    )
    
    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_state = dp.current_state(chat=ticket.tg_id, user=ticket.tg_id)
    await user_state.finish()
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–ø–∏–∫–∞
    await dp.bot.delete_forum_topic(
        chat_id=SUPPORT_CHAT_ID,
        message_thread_id=message_thread_id
    )
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞ –∏–∑ –ë–î
    SupportTickets().delete_ticket(message_thread_id)
    
    await call.answer(f"–¢–∏–∫–µ—Ç –∑–∞–∫—Ä—ã—Ç{block_text}")
    await call.message.delete()
