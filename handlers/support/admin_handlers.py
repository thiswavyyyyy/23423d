from aiogram import types
from aiogram.dispatcher.filters import Text

from config import SUPPORT_CHAT_ID
from db_logic.base import SupportTickets
from loader import dp
from states import SupportState


# –≤—ã–≤–æ–¥–∏—Ç—å chat_id –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É
@dp.message_handler(content_types=types.ContentType.NEW_CHAT_MEMBERS)
async def new_chat_member(message: types.Message):
    await message.reply(f"ID —á–∞—Ç–∞ –¥–ª—è .env: {message.chat.id}\n"
                        f"–ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!")


@dp.message_handler(chat_id=SUPPORT_CHAT_ID, content_types=types.ContentType.ANY)
async def support_admin_reply(message: types.Message):
    if message.content_type in [
        types.ContentType.FORUM_TOPIC_CREATED,
        types.ContentType.FORUM_TOPIC_EDITED,
        types.ContentType.FORUM_TOPIC_CLOSED,
    ]:
        return
    message_thread_id = message.message_thread_id
    ticket = SupportTickets().get_ticket_by_message_thread_id(message_thread_id)
    if ticket:
        user_state = dp.current_state(chat=ticket.tg_id, user=ticket.tg_id)
        await user_state.set_state(SupportState.in_support)
        await user_state.update_data(message_thread_id=message_thread_id)
        try:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∫–ª–∏–µ–Ω—Ç—É
            if message.content_type == types.ContentType.PHOTO:
                photo_id = message.photo[-1].file_id
                caption = f"üåÑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞: {message.caption}" if message.caption else "üåÑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞:"
                await dp.bot.send_photo(
                    chat_id=ticket.tg_id,
                    photo=photo_id,
                    caption=caption
                )
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –∫–ª–∏–µ–Ω—Ç—É
            elif message.content_type == types.ContentType.VIDEO:
                video_id = message.video.file_id
                caption = f"üé• –í–∏–¥–µ–æ –æ—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞: {message.caption}" if message.caption else "üé• –í–∏–¥–µ–æ –æ—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞:"
                await dp.bot.send_video(
                    chat_id=ticket.tg_id,
                    video=video_id,
                    caption=caption
                )
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥—Ä—É–≥–∏–µ —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            else:
                await dp.bot.send_message(
                    chat_id=ticket.tg_id,
                    text=f"üëÅÔ∏è –£ –í–∞—Å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞: {message.text}"
                )
        except Exception as _ex:
            await message.answer(
                text=f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {_ex}"
            )
    else:
        await message.reply(text="–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


@dp.callback_query_handler(Text(equals="close_ticket"), state="*")
async def close_ticket(call: types.CallbackQuery):
    ticket = SupportTickets().get_ticket_by_message_thread_id(
        call.message.message_thread_id
    )
    if ticket:
        user_state = dp.current_state(chat=ticket.tg_id, user=ticket.tg_id)
        await user_state.finish()
        await dp.bot.send_message(
            chat_id=ticket.tg_id,
            text="üîíÔ∏è –í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç.\n\n ‚ùìÔ∏è –ï—Å–ª–∏ —É –í–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç /start"
        )
        await dp.bot.delete_forum_topic(
            chat_id=SUPPORT_CHAT_ID,
            message_thread_id=call.message.message_thread_id
        )
        SupportTickets().delete_ticket(call.message.message_thread_id)
    else:
        await call.answer(text="–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")